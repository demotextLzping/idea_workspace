<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<!-- 配置生成器 -->
<generatorConfiguration>

    <!--<properties resource="配置文件"></properties>-->

    <!--classPathEntry:数据库的JDBC驱动,换成你自己的驱动位置 可选 -->
<!--    <classPathEntry location="C:\Users\黎志平\.m2\repository\org\testcontainers\mysql\1.17.3\mysql-1.17.3.jar"/>-->

    <!-- 一个数据库一个context,defaultModelType="flat" 大数据字段，不分表 -->
    <context id="testTables" targetRuntime="MyBatis3">

        <!-- 自动识别数据库关键字，默认false，如果设置为true，根据SqlReservedWords中定义的关键字列表；一般保留默认值，遇到数据库关键字（Java关键字），使用columnOverride覆盖 -->

<!--        &lt;!&ndash; 生成的Java文件的编码 &ndash;&gt;-->
<!--        <property name="javaFileEncoding" value="utf-8"/>-->

<!--        &lt;!&ndash; beginningDelimiter和endingDelimiter：指明数据库的用于标记数据库对象名的符号，比如ORACLE就是双引号，MYSQL默认是`反引号； &ndash;&gt;-->
<!--        <property name="beginningDelimiter" value="`"/>-->
<!--        <property name="endingDelimiter" value="`"/>-->

<!--        &lt;!&ndash; 格式化java代码 &ndash;&gt;-->
<!--        <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>-->

<!--        &lt;!&ndash; 格式化XML代码 &ndash;&gt;-->
<!--        <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>-->
<!--        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"/>-->
<!--        <plugin type="org.mybatis.generator.plugins.ToStringPlugin"/>-->



        <!-- jdbc连接-->
        <jdbcConnection driverClass="com.mysql.cj.jdbc.Driver"
                        connectionURL="jdbc:mysql://127.0.0.1:3306/mytestdb"
                        userId="root"
                        password="123456"/>

        <!-- 类型转换 -->
        <javaTypeResolver>
            <!-- 是否使用bigDecimal， false可自动转化以下类型（Long, Integer, Short, etc.） -->
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!-- 生成实体类地址 -->
        <javaModelGenerator targetPackage="com.lzp.pojo" targetProject="./src">
            <!-- 是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="false"/>
            <!-- 从数据库返回的值去掉前后空格 -->
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>

        <!-- 生成map.xml文件存放地址 -->
        <sqlMapGenerator targetPackage="com.lzp.mapper" targetProject="./src">
            <property name="enableSubPackages" value="false"/>
        </sqlMapGenerator>

        <!-- 生成接口dao -->
        <javaClientGenerator targetPackage="com.lzp.mapper" targetProject="./src" type="XMLMAPPER">
            <property name="enableSubPackages" value="false"/>
        </javaClientGenerator>

        <!-- table可以有多个,每个数据库中的表都可以写一个table，tableName表示要匹配的数据库表,也可以在tableName属性中通过使用%通配符来匹配所有数据库表,只有匹配的表才会自动生成文件 enableSelectByPrimaryKey相应的配置表示是否生成相应的接口 -->
        <!--注意：相同的表二次执行会追加生成的内容-->
        <table tableName="emp"
               domainObjectName="Emp"
               enableCountByExample="false"
               enableUpdateByExample="false"
               enableDeleteByExample="false"
               enableSelectByExample="false"
               selectByExampleQueryId="false">
            <columnOverride column="id" javaType="Integer"/>
        </table>
    </context>
</generatorConfiguration>